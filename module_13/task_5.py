"""
Известно, что амплитуда качающегося маятника с каждым разом затухает на 8,4% от амплитуды предыдущего колебания. Если
качнуть маятник, то, строго говоря, он не остановится никогда, просто амплитуда будет постоянно уменьшаться до тех пор,
пока мы не сочтём такой маятник остановившимся. Напишите программу, определяющую, сколько раз качнётся маятник, прежде
чем он, по нашему мнению, остановится.

Программа получает на вход начальную амплитуду колебания в сантиметрах и конечную амплитуду колебаний, которая считается
остановкой маятника. Обеспечьте контроль ввода.

Пример:

Введите начальную амплитуду: 1

Введите амплитуду остановки: 0.1

Маятник считается остановившимся через 27 колебаний
"""

from decimal import Decimal

print("Задача 5. Маятник")


def count_full_phases(
    amplitude: int | float | Decimal,
    stop_amplitude: int | float | Decimal,
    step_amplitude: int | float | Decimal = 8.4,
) -> int:
    """
    Считает количество колебаний, после которых маятник остановится с учётом амплитуды остановки.

    :param amplitude: Начальная амплитуда маятника.
    :param stop_amplitude: Амплитуда остановки.
    :param step_amplitude: Затухание амплитуды маятника, %.
    :return: Количество колебаний.
    """
    full_phases = 0

    while amplitude > stop_amplitude:
        amplitude -= amplitude * step_amplitude / 100
        full_phases += 1

    return full_phases


print(
    f'Количество колебаний, после которых маятник считается остановившимся: {count_full_phases(
        float(input("Введите начальную амплитуду >>> ")),
        float(input("Введите амплитуду остановки >>> "))
    )}.'
)
